{"version":3,"sources":["components/layout/NavItem.tsx","components/layout/Navbar.tsx","components/layout/index.jsx","pages/home.tsx","pages/about.tsx","components/products/productCard.tsx","components/products/productCardGrid.tsx","components/products/productsList.tsx","hooks/useFetch.js","components/shared/progressBar.tsx","pages/products.tsx","context/cartContext.tsx","pages/singleProduct.tsx","hooks/useCounter.ts","pages/cart.tsx","pages/Login.tsx","App.tsx","reportWebVitals.ts","serviceWorker.ts","index.tsx"],"names":["formatLink","to","toLowerCase","NavItem","active","useLocation","pathname","slice","mx","cursor","_hover","borderBottom","Navbar","color","px","py","w","src","alt","map","item","main","children","bg","h","CallToActionWithVideo","maxW","align","spacing","base","md","direction","flex","lineHeight","fontWeight","fontSize","sm","lg","as","position","_after","content","width","height","bottom","left","zIndex","rounded","size","colorScheme","leftIcon","PlayIcon","justify","top","useColorModeValue","boxShadow","overflow","aria-label","variant","icon","transform","fit","createIcon","displayName","viewBox","d","Blob","props","fill","xmlns","fillRule","clipRule","About","ProductCard","name","price","imageURL","overview","my","borderRadius","boxSize","objectFit","substring","ProductCardGrid","sortOptions","price_lowest","price_highest","name_az","name_za","ProductsList","products","useState","isGrid","setIsGrid","selectedSortOption","setSelectedSortOption","initialSortedProducts","sort","p1","p2","sortedProducts","setSortedProducts","useEffect","console","log","tempSortedProducts","mb","alignItems","onClick","e","FiGrid","FiAlignJustify","length","ml","maxWidth","defaultValue","onChange","target","value","Object","keys","key","idx","mt","product","id","useFetch","url","cache","useRef","status","setStatus","data","setData","setTimeout","a","current","fetch","response","json","ProgressBar","isIndeterminate","Products","categories","filtredProducts","setFiltredProducts","search","setSearch","selectedCategory","setSelectedCategory","tempFiltredProducts","filter","categoryId","includes","placeholder","_focus","border","category","mr","CartContext","React","createContext","CartContextProvider","cartItems","setCartItems","Provider","addProductToCard","count","newItem","tempCartItems","incrementCount","newCartitems","decrementCount","useCart","context","useContext","undefined","Error","SingleProduct","useParams","initialValue","counter","setCounter","incrementCounter","c","decrementCounter","useCounter","justifyContent","find","disabled","Cart","isNumeric","cartItem","Login","minH","p","type","App","theme","path","exact","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.100ebd7b.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Text } from \"@chakra-ui/react\";\r\nimport { Link, useLocation } from \"react-router-dom\";\r\n\r\ninterface Props {\r\n  to: string;\r\n}\r\n\r\nconst formatLink = (to: String) => {\r\n  if (to === \"Home\") return \"/\";\r\n  return `/${to.toLowerCase()}`;\r\n};\r\n\r\nexport default function NavItem({ to }: Props) {\r\n  const location = useLocation();\r\n  const active = location.pathname.slice(1) === to.toLowerCase();\r\n\r\n  return (\r\n    <Text\r\n      mx=\"2\"\r\n      cursor=\"pointer\"\r\n      _hover={{\r\n        borderBottom: \"2px solid black\",\r\n      }}\r\n      borderBottom={active ? \"2px solid black\" : \"\"}\r\n    >\r\n      <Link to={formatLink(to)}>{to}</Link>\r\n    </Text>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { Flex, Box, Spacer, Center } from \"@chakra-ui/react\";\r\nimport NavItem from \"./NavItem\";\r\n\r\nexport default function Navbar() {\r\n  return (\r\n    <Flex color=\"white\" px=\"50\" py=\"5\">\r\n      <Box w=\"150px\">\r\n        <img\r\n          src=\"https://react-course-comfy-sloth-store.netlify.app/static/media/logo.221f6b13.svg\"\r\n          alt=\"icon\"\r\n        />\r\n      </Box>\r\n      <Spacer />\r\n      <Center color=\"grey\">\r\n        {[\"Home\", \"About\", \"Products\"].map((item) => (\r\n          <NavItem to={item} />\r\n        ))}\r\n      </Center>\r\n      <Spacer />\r\n      <Center color=\"grey\">\r\n        {[\"Cart\", \"Login\"].map((item) => (\r\n          <NavItem to={item} />\r\n        ))}\r\n      </Center>\r\n    </Flex>\r\n  );\r\n}\r\n","import { Box } from \"@chakra-ui/layout\";\r\nimport React from \"react\";\r\nimport Navbar from \"./Navbar\";\r\n\r\nexport default function main({ children }) {\r\n  return (\r\n    <div>\r\n      <Navbar />\r\n      <Box bg=\"#EADED7\" h=\"20\" />\r\n      {children}\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport {\r\n  Container,\r\n  Stack,\r\n  Flex,\r\n  Box,\r\n  Heading,\r\n  Text,\r\n  Button,\r\n  Image,\r\n  Icon,\r\n  IconButton,\r\n  createIcon,\r\n  IconProps,\r\n  useColorModeValue,\r\n} from \"@chakra-ui/react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport default function CallToActionWithVideo() {\r\n  return (\r\n    <Container maxW={\"7xl\"}>\r\n      <Stack\r\n        align={\"center\"}\r\n        spacing={{ base: 8, md: 10 }}\r\n        py={{ base: 20, md: 28 }}\r\n        direction={{ base: \"column\", md: \"row\" }}\r\n      >\r\n        <Stack flex={1} spacing={{ base: 5, md: 10 }}>\r\n          <Heading\r\n            lineHeight={1.1}\r\n            fontWeight={600}\r\n            fontSize={{ base: \"3xl\", sm: \"4xl\", lg: \"6xl\" }}\r\n          >\r\n            <Text\r\n              as={\"span\"}\r\n              position={\"relative\"}\r\n              _after={{\r\n                content: \"''\",\r\n                width: \"full\",\r\n                height: \"30%\",\r\n                position: \"absolute\",\r\n                bottom: 1,\r\n                left: 0,\r\n                bg: \"red.400\",\r\n                zIndex: -1,\r\n              }}\r\n            >\r\n              Start Shopping,\r\n            </Text>\r\n            <br />\r\n            <Text as={\"span\"} color={\"red.400\"}>\r\n              Right now!\r\n            </Text>\r\n          </Heading>\r\n          <Text color={\"gray.500\"}>\r\n            Snippy is a rich coding snippets app that lets you create your own\r\n            code snippets, categorize them, and even sync them in the cloud so\r\n            you can use them anywhere. All that is free!\r\n          </Text>\r\n          <Stack\r\n            spacing={{ base: 4, sm: 6 }}\r\n            direction={{ base: \"column\", sm: \"row\" }}\r\n          >\r\n            <Button\r\n              rounded={\"full\"}\r\n              size={\"lg\"}\r\n              fontWeight={\"normal\"}\r\n              px={6}\r\n              colorScheme={\"red\"}\r\n              bg={\"red.400\"}\r\n              _hover={{ bg: \"red.500\" }}\r\n            >\r\n              <Link to=\"/products\">Get started</Link>\r\n            </Button>\r\n            <Button\r\n              rounded={\"full\"}\r\n              size={\"lg\"}\r\n              fontWeight={\"normal\"}\r\n              px={6}\r\n              leftIcon={<PlayIcon h={4} w={4} color={\"gray.300\"} />}\r\n            >\r\n              <Link to=\"/about\">How It Works</Link>\r\n            </Button>\r\n          </Stack>\r\n        </Stack>\r\n        <Flex\r\n          flex={1}\r\n          justify={\"center\"}\r\n          align={\"center\"}\r\n          position={\"relative\"}\r\n          w={\"full\"}\r\n        >\r\n          <Blob\r\n            w={\"150%\"}\r\n            h={\"150%\"}\r\n            position={\"absolute\"}\r\n            top={\"-20%\"}\r\n            left={0}\r\n            zIndex={-1}\r\n            color={useColorModeValue(\"red.50\", \"red.400\")}\r\n          />\r\n          <Box\r\n            position={\"relative\"}\r\n            height={\"300px\"}\r\n            rounded={\"2xl\"}\r\n            boxShadow={\"2xl\"}\r\n            width={\"full\"}\r\n            overflow={\"hidden\"}\r\n          >\r\n            <IconButton\r\n              aria-label={\"Play Button\"}\r\n              variant={\"ghost\"}\r\n              _hover={{ bg: \"transparent\" }}\r\n              icon={<PlayIcon w={12} h={12} />}\r\n              size={\"lg\"}\r\n              color={\"white\"}\r\n              position={\"absolute\"}\r\n              left={\"50%\"}\r\n              top={\"50%\"}\r\n              transform={\"translateX(-50%) translateY(-50%)\"}\r\n            />\r\n            <Image\r\n              alt={\"Hero Image\"}\r\n              fit={\"cover\"}\r\n              align={\"center\"}\r\n              w={\"100%\"}\r\n              h={\"100%\"}\r\n              src={\r\n                \"https://images.unsplash.com/photo-1499951360447-b19be8fe80f5?ixlib=rb-1.2.1&ixid=MXwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHw%3D&auto=format&fit=crop&w=800&q=80\"\r\n              }\r\n            />\r\n          </Box>\r\n        </Flex>\r\n      </Stack>\r\n    </Container>\r\n  );\r\n}\r\n\r\nconst PlayIcon = createIcon({\r\n  displayName: \"PlayIcon\",\r\n  viewBox: \"0 0 58 58\",\r\n  d: \"M28.9999 0.562988C13.3196 0.562988 0.562378 13.3202 0.562378 29.0005C0.562378 44.6808 13.3196 57.438 28.9999 57.438C44.6801 57.438 57.4374 44.6808 57.4374 29.0005C57.4374 13.3202 44.6801 0.562988 28.9999 0.562988ZM39.2223 30.272L23.5749 39.7247C23.3506 39.8591 23.0946 39.9314 22.8332 39.9342C22.5717 39.9369 22.3142 39.8701 22.0871 39.7406C21.86 39.611 21.6715 39.4234 21.5408 39.1969C21.4102 38.9705 21.3421 38.7133 21.3436 38.4519V19.5491C21.3421 19.2877 21.4102 19.0305 21.5408 18.8041C21.6715 18.5776 21.86 18.3899 22.0871 18.2604C22.3142 18.1308 22.5717 18.064 22.8332 18.0668C23.0946 18.0696 23.3506 18.1419 23.5749 18.2763L39.2223 27.729C39.4404 27.8619 39.6207 28.0486 39.7458 28.2713C39.8709 28.494 39.9366 28.7451 39.9366 29.0005C39.9366 29.2559 39.8709 29.507 39.7458 29.7297C39.6207 29.9523 39.4404 30.1391 39.2223 30.272Z\",\r\n});\r\n\r\nexport const Blob = (props: IconProps) => {\r\n  return (\r\n    <Icon\r\n      width={\"100%\"}\r\n      viewBox=\"0 0 578 440\"\r\n      fill=\"none\"\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n      {...props}\r\n    >\r\n      <path\r\n        fillRule=\"evenodd\"\r\n        clipRule=\"evenodd\"\r\n        d=\"M239.184 439.443c-55.13-5.419-110.241-21.365-151.074-58.767C42.307 338.722-7.478 282.729.938 221.217c8.433-61.644 78.896-91.048 126.871-130.712 34.337-28.388 70.198-51.348 112.004-66.78C282.34 8.024 325.382-3.369 370.518.904c54.019 5.115 112.774 10.886 150.881 49.482 39.916 40.427 49.421 100.753 53.385 157.402 4.13 59.015 11.255 128.44-30.444 170.44-41.383 41.683-111.6 19.106-169.213 30.663-46.68 9.364-88.56 35.21-135.943 30.551z\"\r\n        fill=\"currentColor\"\r\n      />\r\n    </Icon>\r\n  );\r\n};\r\n","import React from \"react\";\r\n\r\nexport default function About() {\r\n  return <div>About</div>;\r\n}\r\n","import React from \"react\";\r\nimport { Flex, Text, Image, Spacer, Button, Stack } from \"@chakra-ui/react\";\r\nimport { Product } from \"./types\";\r\n\r\nexport default function ProductCard({\r\n  name,\r\n  price,\r\n  imageURL,\r\n  overview,\r\n}: Product) {\r\n  return (\r\n    <Flex my=\"3\">\r\n      <Image\r\n        borderRadius=\"4\"\r\n        boxSize=\"15rem\"\r\n        objectFit=\"cover\"\r\n        src={`https://json-server-api22.herokuapp.com${imageURL}`}\r\n        alt=\"product Image\"\r\n      />\r\n      <Stack spacing={3} mx=\"4\">\r\n        <Flex>\r\n          <Text>{name}</Text>\r\n          <Spacer />\r\n          <Text color=\" rgb(171, 122, 95)\">${price}</Text>\r\n        </Flex>\r\n\r\n        <Text>{overview.substring(1, 200)} ...</Text>\r\n        <Button w=\"fit-content\">Details</Button>\r\n      </Stack>\r\n      {/* <Text>{overview}</Text> */}\r\n    </Flex>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { Flex, Text, Image, Box, Spacer } from \"@chakra-ui/react\";\r\nimport { Product } from \"./types\";\r\n\r\nexport default function ProductCardGrid({ name, price, imageURL }: Product) {\r\n  return (\r\n    <Box>\r\n      <Image\r\n        borderRadius=\"4\"\r\n        height=\"200px\"\r\n        width=\"250px\"\r\n        src={`https://json-server-api22.herokuapp.com${imageURL}`}\r\n        alt=\"product Image\"\r\n      />\r\n      <Flex>\r\n        <Text>{name}</Text>\r\n        <Spacer />\r\n        <Text color=\" rgb(171, 122, 95)\">${price}</Text>\r\n      </Flex>\r\n    </Box>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  Box,\r\n  Wrap,\r\n  WrapItem,\r\n  Text,\r\n  Flex,\r\n  Icon,\r\n  Spacer,\r\n  Select,\r\n  Divider,\r\n} from \"@chakra-ui/react\";\r\nimport { FiGrid, FiAlignJustify } from \"react-icons/fi\";\r\n\r\nimport ProductCard from \"./productCard\";\r\nimport { Product, ProductsList as ProductsListType } from \"./types\";\r\nimport ProductCardGrid from \"./productCardGrid\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\ninterface props {\r\n  products: ProductsListType;\r\n}\r\n\r\nconst sortOptions = {\r\n  price_lowest: \"Price (Lowest)\",\r\n  price_highest: \"Price (Highest)\",\r\n  name_az: \"Name (A _ Z)\",\r\n  name_za: \"Name (Z _ A)\",\r\n};\r\n\r\nexport default function ProductsList({ products }: props) {\r\n  const [isGrid, setIsGrid] = useState(true);\r\n  const [selectedSortOption, setSelectedSortOption] = useState(\r\n    sortOptions.price_lowest\r\n  );\r\n\r\n  const initialSortedProducts = products.sort(\r\n    (p1: Product, p2: Product) => p1.price - p2.price\r\n  );\r\n\r\n  const [sortedProducts, setSortedProducts] = useState(initialSortedProducts);\r\n\r\n  useEffect(() => {\r\n    console.log(\"sort option changed \");\r\n    let tempSortedProducts = [...products];\r\n    tempSortedProducts.sort(function (p1: Product, p2: Product): number {\r\n      switch (selectedSortOption) {\r\n        case \"price_lowest\":\r\n          return p1.price - p2.price;\r\n\r\n        case \"price_highest\":\r\n          return p2.price - p1.price;\r\n\r\n        case \"name_az\":\r\n          return p1.name.toLowerCase() > p2.name.toLowerCase() ? 1 : -1;\r\n\r\n        case \"name_za\":\r\n          return p1.name.toLowerCase() < p2.name.toLowerCase() ? 1 : -1;\r\n      }\r\n    });\r\n\r\n    setSortedProducts(tempSortedProducts);\r\n  }, [selectedSortOption, sortedProducts, products]);\r\n\r\n  return (\r\n    <Box>\r\n      <Box mb=\"7\">\r\n        <Flex alignItems=\"center\">\r\n          <Icon\r\n            onClick={(e: any) => setIsGrid(true)}\r\n            as={FiGrid}\r\n            w={5}\r\n            h={5}\r\n            mx=\"2\"\r\n          />\r\n          <Icon\r\n            onClick={(e: any) => setIsGrid(false)}\r\n            as={FiAlignJustify}\r\n            w={5}\r\n            h={5}\r\n            mx=\"2\"\r\n          />\r\n          <Text mx=\"2\">{products.length} Products Found</Text>\r\n          <Spacer />\r\n          <Text>Sort By </Text>\r\n          <Select\r\n            ml=\"2\"\r\n            maxWidth=\"12rem\"\r\n            defaultValue={selectedSortOption}\r\n            onChange={(e) => {\r\n              console.log(e.target.value);\r\n              setSelectedSortOption(e.target.value);\r\n            }}\r\n          >\r\n            {Object.keys(sortOptions).map((key, idx) => (\r\n              <option key={idx} value={key}>\r\n                {sortOptions[key]}\r\n              </option>\r\n            ))}\r\n          </Select>\r\n        </Flex>\r\n      </Box>\r\n      <Divider />\r\n      {isGrid ? (\r\n        <Wrap mt=\"4\">\r\n          {sortedProducts.map((product: Product) => {\r\n            return (\r\n              <Link key={product.id} to={\"/products/\" + product.id}>\r\n                <WrapItem>\r\n                  <ProductCardGrid {...product} />\r\n                </WrapItem>\r\n              </Link>\r\n            );\r\n          })}\r\n        </Wrap>\r\n      ) : (\r\n        <Box>\r\n          {sortedProducts.map((product: Product) => {\r\n            return (\r\n              <Box my=\"8\">\r\n                <Link key={product.id} to={\"/products/\" + product.id}>\r\n                  <ProductCard {...product} />\r\n                </Link>\r\n              </Box>\r\n            );\r\n          })}\r\n        </Box>\r\n      )}\r\n    </Box>\r\n  );\r\n}\r\n","import { useRef, useState, useEffect } from \"react\";\r\n\r\nconst useFetch = (url) => {\r\n  const cache = useRef({});\r\n  const [status, setStatus] = useState(\"fetching\");\r\n  const [data, setData] = useState([]);\r\n\r\n  useEffect(() => {\r\n    if (!url) return;\r\n    const fetchData = async () => {\r\n      setStatus(\"fetching\");\r\n      if (cache.current[url]) {\r\n        const data = cache.current[url];\r\n        setData(data);\r\n        setStatus(\"fetched\");\r\n      } else {\r\n        const response = await fetch(url);\r\n        const data = await response.json();\r\n        cache.current[url] = data; // set response in cache;\r\n        setData(data);\r\n        setStatus(\"fetched\");\r\n      }\r\n    };\r\n\r\n    setTimeout(fetchData, 1000);\r\n  }, [url]);\r\n\r\n  return { status, data };\r\n};\r\n\r\nexport { useFetch };\r\n","import React from \"react\";\r\nimport { Center } from \"@chakra-ui/layout\";\r\nimport { CircularProgress } from \"@chakra-ui/progress\";\r\n\r\nexport default function ProgressBar() {\r\n  return (\r\n    <Center>\r\n      <CircularProgress isIndeterminate color=\"#c5a491\" />\r\n    </Center>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport ProductsList from \"../components/products/productsList\";\r\nimport { useFetch } from \"../hooks/useFetch\";\r\nimport { Stack, Box, Input, List, ListItem, Text } from \"@chakra-ui/react\";\r\n\r\nimport {\r\n  Product,\r\n  ProductsList as ProductsListType,\r\n} from \"../components/products/types\";\r\nimport ProgressBar from \"../components/shared/progressBar\";\r\n\r\ninterface CategorieType {\r\n  id: number;\r\n  name: string;\r\n}\r\n\r\nexport default function Products() {\r\n  const { status, data } = useFetch(\r\n    \"https://json-server-api22.herokuapp.com/products\"\r\n  );\r\n  const { status: fetchState, data: categories } = useFetch(\r\n    \"https://json-server-api22.herokuapp.com/categories\"\r\n  );\r\n  const [filtredProducts, setFiltredProducts] = useState<ProductsListType>([]);\r\n  const [search, setSearch] = useState(\"\");\r\n  const [selectedCategory, setSelectedCategory] = useState(0);\r\n\r\n  useEffect(() => {\r\n    let tempFiltredProducts =\r\n      selectedCategory === 0\r\n        ? data\r\n        : data.filter(\r\n            (product: Product) => product.categoryId === selectedCategory\r\n          );\r\n    tempFiltredProducts = tempFiltredProducts.filter((product: Product) =>\r\n      product.name.toLowerCase().includes(search.toLowerCase())\r\n    );\r\n    setFiltredProducts(tempFiltredProducts);\r\n  }, [search, selectedCategory, data]);\r\n\r\n  return (\r\n    <Stack mt=\"4\" mx=\"20\" spacing={8} direction={[\"column\", \"row\"]}>\r\n      <Box mt=\"2\" mx=\"3\">\r\n        <Input\r\n          variant=\"filled\"\r\n          placeholder=\"search\"\r\n          _focus={{\r\n            border: \"2px solid black\",\r\n          }}\r\n          value={search}\r\n          onChange={(e) => setSearch(e.target.value)}\r\n        />\r\n        <List spacing={1} my=\"2\" color=\"rgb(97, 125, 152)\">\r\n          <ListItem>\r\n            <Text color=\"rgb(16, 42, 66)\" fontWeight=\"bold\" fontSize=\"large\">\r\n              Category\r\n            </Text>\r\n          </ListItem>\r\n          {categories.map((category: CategorieType, idx: any) => (\r\n            <ListItem\r\n              key={idx}\r\n              mr=\"9rem\"\r\n              borderBottom={\r\n                selectedCategory === category.id\r\n                  ? \"1px solid rgb(97, 125, 152)\"\r\n                  : null\r\n              }\r\n              onClick={() => setSelectedCategory(category.id)}\r\n              cursor=\"pointer\"\r\n            >\r\n              {category.name}\r\n            </ListItem>\r\n          ))}\r\n        </List>\r\n      </Box>\r\n\r\n      <Box w=\"100%\">\r\n        {status === \"fetching\" ? (\r\n          <ProgressBar />\r\n        ) : filtredProducts.length === 0 ? (\r\n          <h4>Sorry, no products matched your search.</h4>\r\n        ) : (\r\n          <Box w=\"100%\">\r\n            <ProductsList products={filtredProducts} />\r\n          </Box>\r\n        )}\r\n      </Box>\r\n    </Stack>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport { Product } from \"../components/products/types\";\r\n\r\ninterface props {\r\n  children: React.Element;\r\n}\r\n\r\ninterface CartItem extends Product {\r\n  count: number;\r\n}\r\n\r\ntype CartItems = Array<CartItem>;\r\n\r\n// interface Action {\r\n//   type: string;\r\n//   payload: any;\r\n// }\r\n//\r\nconst CartContext = React.createContext();\r\n\r\n// function cartReducer(state: CartItems | null, action: Action) {\r\n//   switch (action.type) {\r\n//     case \"ADD_ITEM_TO_CART\": {\r\n//       return state?.push(action.payload);\r\n//     }\r\n//     // case \"decrement\": {\r\n//     //   return { count: state.count - 1 };\r\n//     // }\r\n//     default: {\r\n//       throw new Error(`Unhandled action type: ${action.type}`);\r\n//     }\r\n//   }\r\n// }\r\n\r\n// const addToCard = (state, product) => {\r\n//   state.push(product);\r\n// };\r\n\r\nconst CartContextProvider = ({ children }: props) => {\r\n  const [cartItems, setCartItems] = useState<CartItems>([]);\r\n  // const [state, dispatch] = React.useReducer<CartItems, Function>(cartReducer, { cartItems: [] });\r\n  // // NOTE: you *might* need to memoize this value\r\n  // // Learn more in http://kcd.im/optimize-context\r\n  // const value = { state, dispatch };\r\n\r\n  const addProductToCard = (product: Product, count: number = 1) => {\r\n    const newItem = { ...product, count };\r\n    const tempCartItems = [...cartItems, newItem];\r\n    setCartItems(tempCartItems);\r\n  };\r\n\r\n  const incrementCount = (id: number) => {\r\n    const newCartitems = cartItems.map((item: CartItem) =>\r\n      item.id === id ? { ...item, count: item.count + 1 } : item\r\n    );\r\n    setCartItems(newCartitems);\r\n  };\r\n  const decrementCount = (id: number) => {\r\n    const newCartitems = cartItems.map((item: CartItem) =>\r\n      item.id === id && item.count !== 1\r\n        ? { ...item, count: item.count - 1 }\r\n        : item\r\n    );\r\n    setCartItems(newCartitems);\r\n  };\r\n\r\n  return (\r\n    <CartContext.Provider\r\n      value={{ cartItems, addProductToCard, incrementCount, decrementCount }}\r\n    >\r\n      {children}\r\n    </CartContext.Provider>\r\n  );\r\n};\r\n\r\nconst useCart = () => {\r\n  const context = React.useContext(CartContext);\r\n  if (context === undefined) {\r\n    throw new Error(\"useCart must be used within a CountProvider\");\r\n  }\r\n  return context;\r\n};\r\n\r\nexport { CartContextProvider, useCart };\r\n","import React from \"react\";\r\nimport { Flex, Heading, Image, Box, Text, Button } from \"@chakra-ui/react\";\r\nimport { useParams } from \"react-router\";\r\nimport { useFetch } from \"../hooks/useFetch\";\r\nimport useCounter from \"../hooks/useCounter\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useCart } from \"../context/cartContext\";\r\nimport ProgressBar from \"../components/shared/progressBar\";\r\n\r\ninterface RouteParams {\r\n  id: any;\r\n}\r\n\r\nexport default function SingleProduct() {\r\n  const { id } = useParams<RouteParams>();\r\n  const { status, data } = useFetch(\r\n    `https://json-server-api22.herokuapp.com/products/${id}`\r\n  );\r\n  const { cartItems, addProductToCard } = useCart();\r\n\r\n  const { counter, incrementCounter, decrementCounter } = useCounter(1);\r\n\r\n  return status === \"fetching\" ? (\r\n    <ProgressBar />\r\n  ) : (\r\n    <Box mx=\"10rem\" mt=\"2\">\r\n      <Button>\r\n        <Link to=\"/products\">Back to products</Link>{\" \"}\r\n      </Button>\r\n      <Flex mt=\"5\">\r\n        <Image\r\n          boxSize=\"md\"\r\n          borderRadius=\"4\"\r\n          src={`https://json-server-api22.herokuapp.com${data.imageURL}`}\r\n        />\r\n\r\n        <Flex direction=\"column\" ml=\"12\" mb=\"20\" justifyContent=\"space-between\">\r\n          <Heading as=\"h2\">{data.name}</Heading>\r\n          <Heading as=\"h2\">{data.imageURL}</Heading>\r\n          <Text color=\" rgb(171, 122, 95)\">${data.price}</Text>\r\n          <Text>{data.overview}</Text>\r\n          <Text>Available : In Stock</Text>\r\n          <Text>SKU : RecQ0fMd8T0Vk211E</Text>\r\n          <Text>Brand : Liddy</Text>\r\n          <Flex w=\"7rem\" alignItems=\"center\" justifyContent=\"space-around\">\r\n            <Button onClick={decrementCounter}>-</Button>\r\n            <Text>{counter}</Text>\r\n            <Button onClick={incrementCounter}>+</Button>\r\n          </Flex>\r\n          {cartItems.find((item: any) => item.id === id) ? (\r\n            <Button w=\"8rem\" colorScheme=\"teal\" disabled>\r\n              In Cart\r\n            </Button>\r\n          ) : (\r\n            <Button\r\n              colorScheme=\"blue\"\r\n              w=\"8rem\"\r\n              onClick={() => addProductToCard(data, counter)}\r\n            >\r\n              Add To Cart\r\n            </Button>\r\n          )}\r\n        </Flex>\r\n      </Flex>\r\n    </Box>\r\n  );\r\n}\r\n","import { useState } from \"react\";\r\n\r\nexport default function useCounter(initialValue: number) {\r\n  const [counter, setCounter] = useState(initialValue);\r\n\r\n  const incrementCounter = () => {\r\n    setCounter((c: number) => c + 1);\r\n  };\r\n  const decrementCounter = () => {\r\n    counter !== 1 && setCounter((c: number) => c - 1);\r\n  };\r\n\r\n  return { counter, incrementCounter, decrementCounter };\r\n}\r\n","import React from \"react\";\r\nimport {\r\n  Table,\r\n  Thead,\r\n  Tbody,\r\n  Tr,\r\n  Th,\r\n  Td,\r\n  Text,\r\n  Flex,\r\n  Image,\r\n  Button,\r\n} from \"@chakra-ui/react\";\r\n\r\nimport { useCart } from \"../context/cartContext\";\r\n\r\nexport default function Cart() {\r\n  // const { status, data } = useFetch(\"http://localhost:3000/products\");\r\n  const { cartItems, incrementCount, decrementCount } = useCart();\r\n\r\n  console.log(cartItems);\r\n\r\n  return (\r\n    <Flex mx=\"20\" mt=\"3\">\r\n      <Table variant=\"simple\">\r\n        {/* <TableCaption>Imperial to metric conversion factors</TableCaption> */}\r\n        <Thead>\r\n          <Tr>\r\n            <Th>Item</Th>\r\n            <Th isNumeric>Price</Th>\r\n            <Th>Quantity</Th>\r\n            <Th isNumeric>Subtotal</Th>\r\n          </Tr>\r\n        </Thead>\r\n        <Tbody>\r\n          {cartItems.map((cartItem: any) => {\r\n            return (\r\n              <Tr>\r\n                <Td>\r\n                  <Image w=\"5rem\" h=\"4rem\" src={cartItem.imageURL} />\r\n                </Td>\r\n                <Td isNumeric>{cartItem.price} $</Td>\r\n                <Td isNumeric>\r\n                  {\" \"}\r\n                  <Text>\r\n                    <Flex alignItems=\"center\" justifyContent=\"space-around\">\r\n                      <Button onClick={() => decrementCount(cartItem.id)}>\r\n                        -\r\n                      </Button>\r\n                      <Text>{cartItem.count}</Text>\r\n                      <Button onClick={() => incrementCount(cartItem.id)}>\r\n                        +\r\n                      </Button>\r\n                    </Flex>\r\n                  </Text>\r\n                </Td>\r\n                <Td isNumeric>{cartItem.count * cartItem.price}</Td>\r\n              </Tr>\r\n            );\r\n          })}\r\n\r\n          {/* <Tr>\r\n            <Td>feet</Td>\r\n            <Td>centimetres (cm)</Td>\r\n            <Td isNumeric>30.48</Td>\r\n            <Td isNumeric>30.48</Td>\r\n          </Tr>\r\n          <Tr>\r\n            <Td>yards</Td>\r\n            <Td>metres (m)</Td>\r\n            <Td isNumeric>0.91444</Td>\r\n            <Td isNumeric>0.91444</Td>\r\n          </Tr> */}\r\n        </Tbody>\r\n      </Table>\r\n    </Flex>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport {\r\n  Flex,\r\n  Box,\r\n  FormControl,\r\n  FormLabel,\r\n  Input,\r\n  Checkbox,\r\n  Stack,\r\n  Link,\r\n  Button,\r\n  Heading,\r\n  Text,\r\n  useColorModeValue,\r\n} from \"@chakra-ui/react\";\r\n\r\nexport default function Login() {\r\n  return (\r\n    <Flex\r\n      minH={\"100vh\"}\r\n      // align={\"center\"}\r\n      justify={\"center\"}\r\n      bg={useColorModeValue(\"gray.50\", \"gray.800\")}\r\n    >\r\n      <Stack spacing={8} mx={\"auto\"} maxW={\"lg\"} py={12} px={6}>\r\n        <Stack align={\"center\"}>\r\n          <Heading fontSize={\"4xl\"}>Sign in to your account</Heading>\r\n          <Text fontSize={\"lg\"} color={\"gray.600\"}>\r\n            to enjoy all of our cool <Link color={\"blue.400\"}>features</Link> ✌️\r\n          </Text>\r\n        </Stack>\r\n        <Box\r\n          rounded={\"lg\"}\r\n          bg={useColorModeValue(\"white\", \"gray.700\")}\r\n          boxShadow={\"lg\"}\r\n          p={8}\r\n        >\r\n          <Stack spacing={4}>\r\n            <FormControl id=\"email\">\r\n              <FormLabel>Email address</FormLabel>\r\n              <Input type=\"email\" />\r\n            </FormControl>\r\n            <FormControl id=\"password\">\r\n              <FormLabel>Password</FormLabel>\r\n              <Input type=\"password\" />\r\n            </FormControl>\r\n            <Stack spacing={10}>\r\n              <Stack\r\n                direction={{ base: \"column\", sm: \"row\" }}\r\n                align={\"start\"}\r\n                justify={\"space-between\"}\r\n              >\r\n                <Checkbox>Remember me</Checkbox>\r\n                <Link color={\"blue.400\"}>Forgot password?</Link>\r\n              </Stack>\r\n              <Button\r\n                bg={\"blue.400\"}\r\n                color={\"white\"}\r\n                _hover={{\r\n                  bg: \"blue.500\",\r\n                }}\r\n              >\r\n                Sign in\r\n              </Button>\r\n            </Stack>\r\n          </Stack>\r\n        </Box>\r\n      </Stack>\r\n    </Flex>\r\n  );\r\n}\r\n","import * as React from \"react\";\nimport { ChakraProvider, theme } from \"@chakra-ui/react\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\n\nimport Layout from \"./components/layout\";\nimport Home from \"./pages/home\";\nimport About from \"./pages/about\";\nimport Products from \"./pages/products\";\nimport SingleProduct from \"./pages/singleProduct\";\nimport Cart from \"./pages/cart\";\nimport { CartContextProvider } from \"./context/cartContext\";\nimport Login from \"./pages/Login\";\n\nexport const App = () => (\n  <ChakraProvider theme={theme}>\n    <CartContextProvider>\n      <Router>\n        <Layout>\n          <div>\n            <Switch>\n              <Route path=\"/\" exact>\n                <Home />\n              </Route>\n              <Route path=\"/about\">\n                <About />\n              </Route>\n              <Route exact path=\"/products\">\n                <Products />\n              </Route>\n              <Route path=\"/cart\">\n                <Cart />\n              </Route>\n              <Route path=\"/login\">\n                <Login />\n              </Route>\n              <Route path=\"/products/:id\">\n                <SingleProduct />\n              </Route>\n            </Switch>\n          </div>\n        </Layout>\n      </Router>\n    </CartContextProvider>\n  </ChakraProvider>\n);\n","import { ReportHandler } from \"web-vitals\"\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry)\n      getFID(onPerfEntry)\n      getFCP(onPerfEntry)\n      getLCP(onPerfEntry)\n      getTTFB(onPerfEntry)\n    })\n  }\n}\n\nexport default reportWebVitals\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/,\n    ),\n)\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void\n  onUpdate?: (registration: ServiceWorkerRegistration) => void\n}\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href)\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config)\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://cra.link/PWA\",\n          )\n        })\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config)\n      }\n    })\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing\n        if (installingWorker == null) {\n          return\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://cra.link/PWA.\",\n              )\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration)\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It is the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\")\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration)\n              }\n            }\n          }\n        }\n      }\n    })\n    .catch((error) => {\n      console.error(\"Error during service worker registration:\", error)\n    })\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { \"Service-Worker\": \"script\" },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\")\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload()\n          })\n        })\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config)\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\",\n      )\n    })\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister()\n      })\n      .catch((error) => {\n        console.error(error.message)\n      })\n  }\n}\n","import { ColorModeScript } from \"@chakra-ui/react\"\nimport * as React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport { App } from \"./App\"\nimport reportWebVitals from \"./reportWebVitals\"\nimport * as serviceWorker from \"./serviceWorker\"\n\nReactDOM.render(\n  <React.StrictMode>\n    <ColorModeScript />\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\"),\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\nserviceWorker.unregister()\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals()\n"],"sourceRoot":""}